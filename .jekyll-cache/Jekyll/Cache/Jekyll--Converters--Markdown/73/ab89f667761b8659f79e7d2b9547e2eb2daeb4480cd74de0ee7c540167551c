I"ﬁ<h2 id="kurzbeschreibung">Kurzbeschreibung</h2>
<p>Einf√ºhrungen in Konzepte, Techniken und Arbeitsweisen der Web Entwicklung.</p>

<h2 id="lehrformsws">Lehrform/SWS:</h2>
<p>16 SWS: Vorlesung 6 SWS, Praktikum 6 SWS, Projekt 4 SWS</p>

<h2 id="lehrveranstaltungen">Lehrveranstaltungen</h2>
<ul>
  <li>Web Frontend Entwicklung</li>
  <li>Serverseitige Frameworks und Dienste</li>
  <li>Internet of Things</li>
  <li>Web Development Projekt</li>
</ul>

<h2 id="arbeitsaufwand">Arbeitsaufwand:</h2>

<ul>
  <li>
    <p>Web-Frontend Entwicklung: Vorlesung, Seminar(50 Stunden); Selbstlernphase (100 Stunden)</p>
  </li>
  <li>
    <p>Serverseitige Frameworks und Dienste: Vorlesung, Seminar(50 Stunden); Selbstlernphase (100 Stunden)</p>
  </li>
  <li>
    <p>Internet of Things: Vorlesung, Seminar (50 Stunden); Selbstlernphase (100 Stunden)</p>
  </li>
  <li>
    <p>Web Development Projekt: Projekt (150 Stunden)</p>
  </li>
</ul>

<h2 id="angestrebte-lernergebnisse">Angestrebte Lernergebnisse:</h2>
<p>Die Studierenden</p>
<ul>
  <li>kennen ausgew√§hlte Methoden und Frameworks f√ºr die Web Entwicklung im Front-End, im Back-End und in vernetzten Ger√§ten (IoT),</li>
  <li>k√∂nnen eine Methoden und Technologiewahl f√ºr einen Projektkontext fachlich begr√ºnden,</li>
  <li>k√∂nnen Frameworks und Methoden zur Realisierung von Proof-of-Concepts in einem Projektkontext einsetzen und</li>
  <li>k√∂nnen die erzielten Ergebnisse fachlich, kritisch einordnen und diskutieren,</li>
  <li>um kompetent in Web Entwicklungs Teams mitwirken zu k√∂nnen.</li>
</ul>

<h3 id="web-frontend-entwicklung">Web Frontend Entwicklung:</h3>
<p>Die Studierenden kennen wesentliche Konzepte und Technologien des Web-Frontend Developments und k√∂nnen diese anwenden, um eigenst√§ndig im Team Web-Frontends zu konzipieren, realisieren und optimieren.</p>

<p>Die Studierenden sind in der Lage ein gegebenes Gestaltungskonzept zu verstehen und zu erweitern, um dies als Web-Frontend umzusetzen.</p>

<p>Die Studierenden kennen Web-Frontend Frameworks und sind in der Lage diese kritisch zu beurteilen und auf Basis der Anforderungen eines konkreten Projekts das optimale Framework Set zu konfektionieren und die Auswahl zu begr√ºnden.</p>

<p>Die Studierenden kennen das Zusammenspiel von server- und clientseitigen Komponenten im Bereich des Webs und k√∂nnen Web-Frontends konzipieren und realisieren, die mit serverseitigen Komponenten und Diensten m√∂glichst optimal zusammen arbeiten. Sie k√∂nnen au√üerdem, bezogen auf eine konkrete Aufgabenstellung, abw√§gen, welche Funktionalit√§ten clientseitig und welche serverseitig gel√∂st werden sollten.</p>

<h3 id="serverseitige-frameworks-und-dienste">Serverseitige Frameworks und Dienste:</h3>

<p>Die Studentinnen und Studenten kennen</p>
<ul>
  <li>wesentliche Frameworks, Dienste und Werkzeuge f√ºr die serverseitige Entwicklung von Web Anwendungen</li>
  <li>k√∂nnen ausgew√§hlte Frameworks, Dienste und Tools in einem Projektkontext anwenden.</li>
</ul>

<p>Die Kompetenz zur systematischen Entwicklung von Systemen in einem arbeitsteiligen Team wird einge√ºbt und vertieft. Kenntnisse aus den anderen Modulen der Vertiefung werden vertieft und verkn√ºpft und im Rahmen eines konkreten Projektauftrags angewendet.</p>

<p>Die Studierenden sind in der Lage ein Projektbriefing zu durchdringen und daraus einen Projektauftrag abzuleiten und diesen im Team abzuarbeiten.</p>

<p>Den Teilnehmern steht eine Auswahl an Techniken und Frameworks zur Verf√ºgung, aus dem sie die passenden Ans√§tze begr√ºndet ausw√§hlen und anwenden k√∂nnen.</p>

<p>Die StudentenInnen sind in der Lage eine komplexe Anwendung im Web √ºber mehrere Endger√§te hinweg zu planen, zu realisieren und zu dokumentieren.</p>

<h3 id="internet-of-things">Internet of Things:</h3>

<p>In diesem Modul lernen die Teilnehmer das Gebiet Internet of Things kennen. Dabei liegt ein besonderer Fokus auf der Bedeutung des Web f√ºr Applikationen jenseits eines Browsers. Immer mehr Alltagsgegenst√§nde werden mit Technologien angereichert, die eine Dienste-Bereitstellung oder Dienst-Nutzung √ºber das Web erm√∂glichen (beispielsweise das Steuern von Gegenst√§nden oder das Erfassen von Sensordaten). In diesem Modul werden relevante Konzepte und aktuelle Technologien f√ºr das Internet der Dinge diskutiert und in prototypischen Anwendungen erprobt.</p>

<p>Studierende k√∂nnen nach diesem Modul selbstst√§ndig Anwendungen f√ºr das Internet of Things konzipieren und realisieren, indem Sie</p>
<ul>
  <li>hardware-nahe Aspekte im Design der Applikation ber√ºcksichtigen,</li>
  <li>eine System-Architektur entwerfen,</li>
  <li>kriterien-basiert geeignete Technologien zur Realisierung ausw√§hlen,</li>
  <li>eine prototypische Anwendung implementieren,</li>
  <li>inkrementell-iterativ vorgehen und Projektentscheidungen auf der Grundlage vorliegender Zwischenst√§nde treffen.</li>
</ul>

<h2 id="inhalt">Inhalt:</h2>

<h3 id="web-frontend-entwicklung-1">Web Frontend Entwicklung:</h3>
<ul>
  <li>Web Basics: HTML, CSS, Javascript</li>
  <li>CSS: Komplexe Layouts &amp; Responsivit√§t</li>
  <li>Javascript: Dynamische Anwendungen</li>
  <li>Media Types</li>
  <li>CSS Frameworks</li>
  <li>CSS Preprozessoren</li>
  <li>Javascript Frameworks</li>
  <li>Performance</li>
  <li>Microdata, Internationalisierung, SEO, Barrierefreiheit</li>
</ul>

<h3 id="serverseitige-frameworks-und-dienste-1">Serverseitige Frameworks und Dienste:</h3>

<ul>
  <li>NodeJS</li>
  <li>Services im Web: Amazon WS (AWS), Google Firebase</li>
  <li>NoSQL Datenbanken</li>
  <li>Web Analyse: Piwik,</li>
</ul>

<p>Ausgew√§hlte Tools sollen tiefgreifend erarbeitet werden und in einem Projektkontext angewendet werden. Dies erfolgt in der Regel in dem begleitenden Projekt</p>

<h3 id="internet-of-things-1">Internet of Things:</h3>

<p>Zu Begin des Moduls findet eine Einf√ºhrung durch den Dozenten statt. Danach werden in seminaristischem Unterricht verschiedene aktuelle und relevante Technologie des Internet of Things vermittelt, demonstriert und erprobt (bspw. Raspberry Pi, Arduino, MQTT, Node-Red, Johnny Five, AndroidThings). Diese werden in Teams zur Entwicklung eines eigenen IoT-Prototypen eingesetzt.</p>

<p>Weitere Inhalte sind:</p>

<ul>
  <li>Physical Computing</li>
  <li>Prototyping und Retrofitting</li>
  <li>Hardware (bspw. RaspberryPi und Arduino)</li>
  <li>Sensoren und Aktoren</li>
  <li>Frameworks (bspw. NodeRed und Johnny Five)</li>
  <li>Architekturen und Protokolle (bspw. event-basierte Architekturen und MQTT)</li>
  <li>Mobile Web- und Smartphone-Sensoren (bspw. GPS, Beacons)</li>
</ul>

<h2 id="studien-pr√ºfungsleistungen">Studien-/Pr√ºfungsleistungen:</h2>
<p>Projektarbeit mit Projektpr√§sentationspr√ºfung und Fachgespr√§ch.</p>

<h2 id="medienformen">Medienformen:</h2>
<p>Beamergest√ºtzte Vortr√§ge, Rechnergest√ºtzte Workshops</p>

<h2 id="literatur">Literatur:</h2>
<ul>
  <li>Randy Connolly, Ricardo Hoar: Fundamentals of Web Development</li>
  <li>Andy Clark: Hardboiled Web-Design</li>
  <li>Tilkov et al.: REST und HTTP- Entwicklung und Integration nach dem Architekturstil des Web, dpunkt.verlag 2015</li>
  <li>Watkin: Practical XMPP, Packt Publishing 2016</li>
  <li>Saint-Andre: XMPP: THe Definitive Guide, OReilly 2009</li>
  <li>Roy: RabbitMQ in Depth, Manning 2016</li>
  <li>Newman: Building Microservices: Designing fine-grained systems, OReilly 2015</li>
</ul>
:ET