I"Å<h2 id="lehrformsws">Lehrform/SWS</h2>
<p>36h Vorlesung; 36h Praktikum / Projekt; 78h Selbstlernphase</p>

<h2 id="angestrebte-lernergebnisse">Angestrebte Lernergebnisse</h2>
<p>Die Grundlagen der zwei- und insbesondere der dreidimensionalen Computergraphik und Animation stellen ein hervorragendes Paradigma zur Vermittlung zentraler Inhalte und Kompetenzen der Medieninformatik dar.</p>

<p>Den Studierenden wird deutlich, wie der Bogen von den abstrakten, geometrischen und algorithmischen Fakten zu den pragmatischen Gegebenheiten der Computergraphik-Hardware gespannt ist. 
Sie erkennen die Zusammenh√§nge zwischen Grundlagenvorlesungen (Mathematik, Algorithmen, Programmierung) und der Gestaltung von Schnittstellen und Oberfl√§chen und werden so f√ºr die jeweiligen Inhalte zus√§tzlich motiviert. 
Dabei lernen Sie, im Kontext der Computergrafik, Verfahrensweisen kennen, um den algorithmischen Kern eines Problems zu identifizieren und k√∂nnen Algorithmen entwerfen, verifizieren und bzgl. ihres Ressourcenbedarfs bewerten.
Sie erwerben die F√§higkeit, aktuelle technologische Entwicklungen im Medieninformatik-Kontext zu bewerten und Trends einzuordnen.</p>

<p>Nach Abschluss des Moduls besitzen die Studierenden grundlegende Kenntnisse √ºber Architektur und Programmierung moderner Graphikhardware, sowie deren Anwendung in konkreten Problemstellungen und Anwendungskontexten. 
Am Beispiel von OpenGL und der Rendering-Pipeline lernen die Studierenden Problemstellungen im Anwendungskontext zu erkennen und sind mit den zugeh√∂rigen L√∂sungsmustern durch praktische Programmierung vertraut.</p>

<p>Das erlernte Wissen und die erlernten Kenntnisse in der Soft- und Grafikhardware-Architektur erm√∂glicht es erfolgreichen Teilnehmern, anschlie√üend Echtzeit-Visualisierungen mit OpenGL zu implementieren und somit mit einer modernen, plattformunabh√§ngigen API umzugehen, die flexibel an bestehende Anforderungen angepasst werden kann. Zudem haben Sie die F√§higkeit hochparallele Algorithmen auf der Graphikkarte zu entwerfen und auszuf√ºhren.</p>

<p>Dabei beherrschen die Studierenden nach Abschluss des Moduls die F√§higkeit abstrakte Szenen- und Objektbeschreibungen zu erstellen und darzustellen, sowie sich in vorhandenen Quelltext einzuarbeiten und diesen sinnvoll weiter zu entwickeln.
Die Inhalte des Moduls bef√§higen die Studierenden die grundlegenden Algorithmen und Datenstrukturen der Echtzeit-Computergraphik zu beherrschen. 
Die Studierenden k√∂nnen ihr erworbenes K√∂nnen und Wissen zur Implementierung einer eigenen Game/Visualisierungs-Engine einsetzen. Dies zeigen Sie durch Umsetzung eines eigenen Projektes in Kleingruppen, wo sie zus√§tzlich lernen m√ºndlich √ºberzeugend zu pr√§sentieren, abweichende Positionen zu erkennen und in eine sach- und interessengerechte L√∂sung zu integrieren. Sie zeigen dadurch, dass Sie in der Lage sind sich selbstst√§ndig neues Wissen anzueigenen und zu erkennen, welches Wissen relevant ist, k√∂nnen mediengestalterische Grundkompetenzen anwenden und besitzen aktive Vokabularien zur Beschreibung und Realisierung angemessener Konzeptionen. Zudem k√∂nnen sie die Realisationen bez√ºglich der Zielsetzungen kritisch diskutieren.</p>

<h2 id="inhalt">Inhalt</h2>
<ul>
  <li>Graphikhardware,</li>
  <li>OpenGL</li>
  <li>Transformationen und homogene Koordinaten</li>
  <li>Interpolation</li>
  <li>Kameramodelle</li>
  <li>Clipping</li>
  <li>Shaderprogrammierung</li>
  <li>Animation</li>
  <li>Texturierung</li>
  <li>Fortgeschrittene Algorithmen (Schatten, Reflexionen, Bump-, Normal-, Parallax-, Relief-Mapping, Globale Beleuchtung, Deferred Shading)</li>
  <li>Perzeption</li>
  <li>Grundlagen des Ray Tracings</li>
</ul>

<h2 id="medienformen">Medienformen</h2>
<ul>
  <li>Beamer-gest√ºtzte Vorlesungen</li>
  <li>Rechnergest√ºtzte Workshops</li>
  <li>Beispiele aus verschiedenen Medien in elektronischer Form: Filmbeispiele, Webvideos</li>
  <li>Audiovisuelle Aufnahme- und Wiedergabeger√§te</li>
  <li>Interaktive Projektionsfl√§che</li>
  <li>Lehrfilme</li>
</ul>

<h2 id="literatur">Literatur</h2>
<ul>
  <li>Peter Shirley, Fundamentals of Computer Graphics, Peters, Wellesley</li>
  <li>Andrew Woo, et al., OpenGL Programming Guide, Version 4.3, Addison-Wesley,</li>
  <li>Tomas Akenine-M√∂ller, Eric Haines, und Naty Hoffman, Real-Time Rendering, 3. Ausgabe, Peters, Wellesley</li>
  <li>Randi J. Rost, John M. Kessenich, Barthold Lichtenbelt, OpenGL Shading Language, 2. Ausgabe, Addison-Wesley</li>
  <li>Alan Watt, 3D Computer Graphics, Addison-Wesley</li>
  <li>Frank Nielsen, Visual Computing, Charles River Media, 2005</li>
  <li>James Foley, Andries Van Dam, et al., Computer Graphics : Principles and Practice, 2. Ausgabe, Addison-Wesley</li>
</ul>
:ET